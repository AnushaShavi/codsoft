import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import classification_report
df=pd.read_csv('/content/creditcard.csv')

df.head()

print(df.tail())

#Drop null values
df.dropna(inplace=True)

print(df.isnull().sum())

print(df.dtypes)

#Normalising the attribute amount
s=StandardScaler()
df['Amount']=s.fit_transform(df[['Amount']])

x=df.drop('Class',axis=1)
y=df['Class']


#handling class imbalance using oversampling
from imblearn.over_sampling import RandomOverSampler
os=RandomOverSampler(random_state=23)
x_resample,y_resample=os.fit_resample(x,y)

print(x_resample)

x_train,x_test,y_train,y_test=train_test_split(x_resample,y_resample,test_size=0.3,random_state=23)

model=LogisticRegression()
model.fit(x_train,y_train)


y_pred=model.predict(x_test)


# Evaluate the model
print(classification_report(y_test, y_pred))
